replytimeout = 4000;
readtimeout = 9000;
writetimeout = 4000;
# define the record waiting time in the queue to be processed
locktimeout = 9000;
#In & out terminator must be defined, otherwise the readTimeout & replyTimeout will be used
outterminator = CR;
interminator = CR;

clear_set {
  extraInput = ignore;
  out "CL \$1";
  in "CL";
  in "AL\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u";
}

status_get {
  # Parameters: 1 = P 2 = R 3 = CHAN
  out "ST \$3";
  in "AL\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u";
  in "ST\_\$3\_%(\$1\$2flow_get.VAL)u\_"
            "%(\$1\$2min_get.VAL)d\_"
            "%(\$1\$2max_get.VAL)d\_"
            "%(\$1\$2Qn_get.VAL)#{1.5N=2|2.5=1|1.5=0|10.N=3|10.0}\_"
            "%(\$1\$2kubic_get.VAL)u\_"
            "%u\_"; # last is Liter
  @mismatch{
  in "ST\_\$3\_%(\$1\$2flow_get.VAL)u\_"
            "%(\$1\$2min_get.VAL)d\_"
            "%(\$1\$2max_get.VAL)d\_"
            "%(\$1\$2Qn_get.VAL)#{1.5N=2|2.5=1|1.5=0|10.N=3|10.0}\_"
            "%(\$1\$2kubic_get.VAL)u\_"
            "%u\_"} # last is Liter
}

# alarm 
alarm_get {
  extraInput = ignore;
  out "IN";
  in "IN %(mexh3:wm_wedlposu01:alarm.VAL)#{ 1 =1|=0}"
       "%(steam:wm_laser:alarm.VAL)#{ 2 =1|=0}"
       "%(melba_060:wm_beamdump:alarm.VAL)#{ 3 =1|=0}"
       "%(pos4:res4:alarm.VAL)#{ 4 =1|=0}"
       "%(pos5:res5:alarm.VAL)#{ 5 =1|=0}"
       "%(pos6:res6:alarm.VAL)#{ 6 =1|=0}"
       "%(pos7:res7:alarm.VAL)#{ 7 =1|=0}"
       "%(pos8:res8:alarm.VAL)#{ 8 =1|=0}"
       "%(pos9:res9:alarm.VAL)#{ 9 =1|=0}"
       "%(pos10:res10:alarm.VAL)#{10 =1|=0}"
       "%(pos11:res11:alarm.VAL)#{11 =1|=0}"
       "%(pos12:res12:alarm.VAL)#{12 =1|=0}"
       "%(pos13:res13:alarm.VAL)#{13 =1|=0}"
       "%(pos14:res14:alarm.VAL)#{14 =1|=0}"
       "%#{15 =1|=0}";
}


min_set {
  extraInput = ignore;
  out "SE \$1 %u";
  in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u ";
  in "AL\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u";
  #@mismatch{in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u "};
  @init  {
	out "SE \$1 %u";
	in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u ";
   	in "AL\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u";
  }
}

max_set {
  extraInput = ignore;
  out "SE \$1 * %u";
  in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u ";
  in "AL\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\%_*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u\_%*u";
  @mismatch{in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u "};
}

Qn_set {
  extraInput = ignore;
  out "SE \$1 * * %#{1.5|2.5|3.5|6|10}";
  in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u";
  @init{
  	out "SE \$1 * * %#{1.5|2.5|3.5|6|10}";
  	in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u";}
}

kubic_set {
  extraInput = ignore;
  out "SE \$1 *** %u";
  in "SE\_\$1\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u"
}

liter_set {
  extraInput = ignore;
  out "SE \$3 **** %u";
  in "SE\_\$3\_%*u\_%*u\_%*u\_%*s\_%*u\_%*u";

  @init{
   out "SE \$3";
   in "SE\_\$3\_%*u\_"
              "%*u\_"
              "%(\$1\$2max_set.VAL)u\_"
              "%*s\_"
              "%u\_"
              "%u "; # last is Liter
  }
}

